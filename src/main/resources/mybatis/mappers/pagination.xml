<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- survey List pagination -->
<mapper namespace="com.mySpring.springEx.common.pagination.mapper.PageMapper">
	



	<!-- courseTake pagination -->

	<resultMap id="courseTakeResult" type="courseTakeVO">
		<result property="userID" column="userID" />
		<result property="courseID" column="courseID" />
		<result property="courseTake_State" column="courseTake_State" />
		<result property="courseTake_ApplyDate"
			column="courseTake_ApplyDate" />
		<result property="courseTake_CompleteDate"
			column="courseTake_CompleteDate" />

		<!-- join 할 VO를 데이터매핑 -->
		<collection property="memberVO" javaType="MemberVO">
			<id property="userId" column="userId" />
			<result property="userName" column="userName" />
			<result property="userPhoneNumber" column="userPhoneNumber" />
			<result property="userEmail" column="userEmail" />
			<result property="userCompany" column="userCompany" />
		</collection>

		<collection property="courseVO" javaType="CourseVO">
			<id property="courseID" column="courseID" />
			<result property="syllabusID" column="syllabusID" />
		</collection>

		<collection property="syllabusVO" javaType="SyllabusVO">
			<id property="syllabusID" column="syllabusID" />
			<result property="syllabusName" column="syllabusName" />
		</collection>
	</resultMap>

	
	

	<!-- <select id="loginById" resultType="memberVO" parameterType="memberVO" 
		> <![CDATA[ select * from t_member where id=#{id} and pwd=#{pwd} ]]> </select> -->
	<!--*****************************************************파트너 페이징 ***************************************************** -->
	<resultMap id="resResult" type="partnerVO">
		<result property="partnerLicenseNum" column="partnerLicenseNum" />
		<result property="partnerState" column="partnerState" />
		<result property="partnerName" column="partnerName" />
		<result property="partnerInformation"
			column="partnerInformation" />
		<result property="partnerAddress" column="partnerAddress" />
		<result property="partnerPhoneNumber"
			column="partnerPhoneNumber" />
		<result property="partnerEmail" column="partnerEmail" />
		<result property="partnerCEO" column="partnerCEO" />
		<result property="partnerHeadCount" column="partnerHeadCount" />
		<result property="partnerApplyYN" column="partnerApplyYN" />
		<result property="partnerApplyFinishDate"
			column="partnerApplyFinishDate" />
		<result property="partnerURL" column="partnerURL" />
		<result property="partnerRegisterDate"
			column="partnerRegisterDate" />
	</resultMap>

 <resultMap id="companyCourseTakeResult" type="courseTakeVO">
		<result property="userID" column="userID" />
		<result property="courseID" column="courseID" />
		<result property="courseTake_State" column="courseTake_State" />
		<result property="courseTake_ApplyDate"
			column="courseTake_ApplyDate" />
		<result property="courseTake_CompleteDate"
			column="courseTake_CompleteDate" />
		<!-- join 할 VO를 데이터매핑 -->
		<collection property="memberVO" javaType="MemberVO">
		<result property="userId" column="userId" />
		<result property="userName" column="userName" />
		<result property="userPhoneNumber" column="userPhoneNumber" />
		<result property="userEmail" column="userEmail" />
		<result property="userCompany" column="userCompany" />
		</collection>
		
		<collection property="courseVO" javaType="CourseVO">
		<result property="courseID" column="courseID" />
		<result property="syllabusID" column="syllabusID" />
		</collection>
		
		<collection property="syllabusVO" javaType="SyllabusVO">
		<result	property="syllabusID" column="syllabusID"/>
		<result property="syllabusName" column="syllabusName" />
		</collection>
	</resultMap>

	<select id="SelectAllListPartner" resultMap="resResult">
		SELECT *
		FROM (
		SELECT ROW_NUMBER() OVER(ORDER by partnerLicenseNum DESC) AS
		row_num
		,partnerLicenseNum
		,partnerState
		,partnerName
		,partnerInformation
		,partnerPhoneNumber
		,partnerAddress
		,partnerEmail
		,partnerCEO
		,partnerHeadCount
		,partnerApplyYN
		,partnerApplyFinishDate
		,partnerURL
		,partnerRegisterDate
		FROM partner
		)
		<if test="firstRecordIndex !=null and lastRecordIndex != null">
			WHERE row_num BETWEEN #{firstRecordIndex} AND
			#{lastRecordIndex}
		</if>
	</select>

	
	 <select id="testTableCountPartner" resultType="int">
        SELECT count(*) FROM
        partner
    </select>
    
    
    <!-- 공지사항 시작-->
    <resultMap id="noticeResult" type="noticeVO">
		<result property="notice_no" column="notice_no" />
		<result property="notice_category" column="notice_category" />
        <result property="notice_title" column="notice_title" />
        <result property="notice_adminID" column="notice_adminID" />
        <result property="notice_date" column="notice_date" />
        <result property="notice_hit" column="notice_hit" />
	</resultMap> 

	<select id="NoticeAllList" resultMap="noticeResult">
         SELECT *
        FROM (
        SELECT ROW_NUMBER() OVER(ORDER by notice_no DESC) AS
        row_num
        ,notice_no
        ,notice_category
        ,notice_title
        ,notice_adminID
        ,notice_date
        ,notice_hit
        FROM notice
        )
         <if test="firstRecordIndex !=null and lastRecordIndex != null">
            WHERE row_num BETWEEN #{firstRecordIndex} AND
            #{lastRecordIndex}
        </if>	 	
	</select>
	
	<select id="testTableCountN" resultType="int">
        SELECT count(*) FROM
        notice
    </select>
  	<!-- 공지사항 끝-->
  	
  	<!-- 협력사관련 -->
  	
  	<select id="companyEmployeeTableCount" resultType="int">
  	SELECT count(*) from( select ROW_NUMBER() OVER(ORDER by ct.courseTake_ApplyDate) as row_num,
  	 				 m.userId,
  	 				 m.userName,
  	 				 m.userPhoneNumber,
  	 				 m.userEmail,
  	 				 s.syllabusName,
  	 				 ct.courseTake_State,
  	 				 ct.courseTake_ApplyDate,
  	 				 ct.courseTake_CompleteDate
  	 				 from course_take ct join kt_user m on ct.userId = m.userId join partner p on p.partnerLicenseNum = m.userCompany join course c on c.courseId = ct.courseId join syllabus s on s.syllabusId = c.syllabusId 
  	 				 where p.partnerLicenseNum=#{partnerLicenseNum})
        </select>
    
  	<select id="SelectAllListCompanyEmployee" resultMap="companyCourseTakeResult">
  	
  	SELECT * from( select ROW_NUMBER() OVER(ORDER by ct.courseTake_ApplyDate) as row_num,
  	 				 m.userId,
  	 				 m.userName,
  	 				 m.userPhoneNumber,
  	 				 m.userEmail,
  	 				 s.syllabusName, 
  	 				 ct.courseID,
  	 				 ct.courseTake_State,
  	 				 ct.courseTake_ApplyDate,
  	 				 ct.courseTake_CompleteDate
  	 				 from course_take ct join kt_user m on ct.userId = m.userId join partner p on p.partnerLicenseNum = m.userCompany join course c on c.courseId = ct.courseId join syllabus s on s.syllabusId = c.syllabusId 
  	 				 where p.partnerLicenseNum=#{partnerLicenseNum}) 
     <if test="firstRecordIndex !=null and lastRecordIndex != null">
            WHERE row_num BETWEEN #{firstRecordIndex} AND
            #{lastRecordIndex}
        </if>
	</select>
	
	<select id="searchEmployeeTableCount" resultType="int">
  	select count(*) 
    from (select ROW_NUMBER() OVER(ORDER by ct.courseTake_ApplyDate) as row_num,
  	 				 m.userId,
  	 				 m.userName,
  	 				 m.userPhoneNumber,
  	 				 m.userEmail,
  	 				 s.syllabusName, 
  	 				 ct.courseID,
  	 				 ct.courseTake_State,
  	 				 ct.courseTake_ApplyDate,
  	 				 ct.courseTake_CompleteDate
  	 				 from course_take ct join course c on c.courseid = ct.courseid join syllabus s on s.syllabusid= c.syllabusid join kt_user m on m.userid = ct.userid 
    				 where 
    				 <if test="syllabusName == ''">
    				 s.syllabusName like '%'||''||'%'
    				 </if>
    				 <if test="syllabusName != ''">
    				 s.syllabusName like '%'||#{syllabusName}||'%'
    				 </if>
    				 <if test="courseStartDate == ''">
    				 <![CDATA[
        			 and to_char(c.courseStart,'YYMMDD') - '000101' > 0
    				 ]]>
    				 </if>
    				 <if test="courseStartDate != ''">
    				  <![CDATA[
        			 and to_char(c.courseStart,'YYMMDD') - #{courseStartDate} > 0
    				 ]]>
    				 </if>
    				 <if test="completionDate == ''">
    				 <![CDATA[
        			 and to_char(ct.coursetake_completedate,'YYMMDD') IS NULL
    				 ]]>
    				 </if>
    				 <if test="completionDate != ''">
    				 <![CDATA[
        			 and to_char(ct.coursetake_completedate,'YYMMDD') - #{completionDate} > 0
    				 ]]>
    				 </if>
    				 <if test="userName == ''">
    				 and m.userName like '%'||''||'%' 
    				 </if>
    				 <if test="userName != ''">
    				 and m.userName like '%'||#{userName}||'%' 
    				 </if>
    				 and m.usercompany =#{partnerLicenseNum})
        </select>
    
    <select id="SearchListCompanyEmployee" resultMap="companyCourseTakeResult">
  	select * 
    from (select ROW_NUMBER() OVER(ORDER by ct.courseTake_ApplyDate) as row_num,
  	 				 m.userId,
  	 				 m.userName,
  	 				 m.userPhoneNumber,
  	 				 m.userEmail,
  	 				 s.syllabusName, 
  	 				 ct.courseID,
  	 				 ct.courseTake_State,
  	 				 ct.courseTake_ApplyDate,
  	 				 ct.courseTake_CompleteDate
  	 				 from course_take ct join course c on c.courseid = ct.courseid join syllabus s on s.syllabusid= c.syllabusid join kt_user m on m.userid = ct.userid 
    				 where
    				 <if test="syllabusName == ''">
    				 s.syllabusName like '%'||''||'%'
    				 </if>
    				 <if test="syllabusName != ''">
    				 s.syllabusName like '%'||#{syllabusName}||'%'
    				 </if>
    				 <if test="courseStartDate == ''">
    				 <![CDATA[
        			 and to_char(c.courseStart,'YYMMDD') - '000101' > 0
    				 ]]>
    				 </if>
    				 <if test="courseStartDate != ''">
    				  <![CDATA[
        			 and to_char(c.courseStart,'YYMMDD') - #{courseStartDate} > 0
    				 ]]>
    				 </if>
    				 <if test="completionDate == ''">
    				 <![CDATA[
        			 and to_char(ct.coursetake_completedate,'YYMMDD') IS NULL
    				 ]]>
    				 </if>
    				 <if test="completionDate != ''">
    				 <![CDATA[
        			 and to_char(ct.coursetake_completedate,'YYMMDD') - #{completionDate} > 0
    				 ]]>
    				 </if>
    				 <if test="userName == ''">
    				 and m.userName like '%'||''||'%' 
    				 </if>
    				 <if test="userName != ''">
    				 and m.userName like '%'||#{userName}||'%' 
    				 </if>
    				 and m.usercompany =#{partnerLicenseNum})
        </select>
</mapper>
