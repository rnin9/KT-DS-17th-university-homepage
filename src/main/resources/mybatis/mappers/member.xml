<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">
	<resultMap id="memResult" type="memberVO">
		<result property="userId" column="userId" />
		<result property="userPassword" column="userPassword" />
		<result property="userName" column="userName" />
		<result property="userEmail" column="userEmail" />
		<result property="birth" column="birth" />
		<result property="userGender" column="userGender" />
		<result property="userMajor" column="userMajor" />
		<result property="userPosition" column="userPosition" />
		<result property="userJob" column="userJob" />
		<result property="userCompany" column="userCompany" />
		<result property="userPhoneNumber" column="userPhoneNumber" />
		<result property="userAddress1" column="userAddress1" />
		<result property="userAddress2" column="userAddress2" />
		<result property="userJoindate" column="userJoindate" />
		<result property="approval_status" column="approval_status" />
		<result property="resume" column="resume" />
	</resultMap>

	<resultMap id="resResult" type="partnerVO">
		<result property="partnerLicenseNum" column="partnerLicenseNum" />
		<result property="partnerState" column="partnerState" />
		<result property="partnerName" column="partnerName" />
		<result property="partnerInformation"
			column="partnerInformation" />
		<result property="partnerAddress" column="partnerAddress" />
		<result property="partnerPhoneNumber"
			column="partnerPhoneNumber" />
		<result property="partnerEmail" column="partnerEmail" />
		<result property="partnerCEO" column="partnerCEO" />
		<result property="partnerHeadCount" column="partnerHeadCount" />
		<result property="partnerApplyYN" column="partnerApplyYN" />
		<result property="partnerApplyFinishDate"
			column="partnerApplyFinishDate" />
		<result property="partnerURL" column="partnerURL" />
		<result property="partnerRegisterDate"
			column="partnerRegisterDate" />
	</resultMap>

	<resultMap id="applicationResult" type="HashMap">
		<result property="partnerName" column="PartnerName" />
		<result property="partnerID" column="PARTNER_APPLY_PARTNERID" />
		<result property="partnerApplyDate" column="Partner_Apply_Date" />
		<result property="partnerApplyState"
			column="Partner_Apply_State" />
	</resultMap>

	<resultMap id="suggestionResult" type="HashMap">
		<result property="partnerName" column="PartnerName" />
		<result property="partnerID" column="PARTNERID" />
		<result property="suggestDescription" column="SUGGESTDESCRIPTION" />
		<result property="suggestionDate" column="SUGGESTIONDATE" />
		<result property="acception" column="ACCEPTION"/>
		<result property="suggestionTitle" column="SUGGESTIONTITLE"/>
	</resultMap>


	<select id="selectAllMemberList" resultMap="memResult">
      <![CDATA[
         select * from kt_user order by userJoindate desc	 	
      ]]>
	</select>

	<select id="selectAllPartnerList" resultMap="resResult">
      <![CDATA[
         select partnerlicensenum from partner 	
      ]]>
	</select>

	<!-- select all recruitments -->
	<select id="selectAllRecruitList" resultMap="resResult">
		<![CDATA[
			select *
			from partner
			where partnerApplyYN = 'Y'
		]]>
	</select>

	<!-- select all applications -->
	<select id="selectAllApplicationList"
		resultMap="applicationResult">
		select (select PARTNERNAME
		from partner
		where PARTNERLICENSENUM = PARTNER_APPLY_PARTNERID
		)as partnerName,
		PARTNER_APPLY_PARTNERID,
		Partner_Apply_Date,
		Partner_Apply_State
		from partner_apply
		where Partner_Apply_UserID = #{id}
	</select>

	<!-- select all suggestions-->
	<select id="selectAllSuggestionList"
			resultMap="suggestionResult">
		select (select PARTNERNAME
				from partner
				where PARTNERLICENSENUM = PARTNERID
			   )as partnerName,
			   PARTNERID,
			   SUGGESTDESCRIPTION,
		       ACCEPTION,
			   SUGGESTIONDATE,
		       SUGGESTIONTITLE
		from Partner_Suggestion
		where userid = #{id} and USERDELETION = 'Y'
	</select>

	<!-- insert application -->
	<insert id="userApplyPartner" parameterType="java.util.HashMap">
		<selectKey keyProperty="partnerApplyResumeID" resultType="String" order="BEFORE">
			select resumeID
			from resume
			where resumeUser
			= #{partnerApplyUserID}
		</selectKey>
		insert into partner_apply
		values(#{partnerApplyUserID},
		#{partnerApplyPartnerID}, #{partnerApplyResumeID}, sysdate, '진행중')
	</insert>

	<!-- delete application -->
	<delete id="deleteApplication" parameterType="String">
		delete from
		partner_apply
		where PARTNER_APPLY_USERID = #{partnerApplyUserID} and
		PARTNER_APPLY_PARTNERID = #{partnerApplyPartnerID}
	</delete>

	<!--  update userDeletion	-->
	<update id="deleteSuggestion" parameterType="String">
		update Partner_Suggestion set
		USERDELETION = 'N'
		where PARTNERID = #{partnerID} and USERID = #{userID}
	</update>

	<!--  update acception accept	-->
	<update id="acceptSuggestion" parameterType="String">
		update Partner_Suggestion set
			ACCEPTION = '수락'
		where PARTNERID = #{partnerID} and USERID = #{userID}
	</update>

	<!--  update acception reject	-->
	<update id="rejectSuggestion" parameterType="String">
		update Partner_Suggestion set
			ACCEPTION = '거절'
		where PARTNERID = #{partnerID} and USERID = #{userID}
	</update>


	<!-- <insert id="insertMember" parameterType="memberVO"> <![CDATA[ insert 
		into t_member1(id,pwd, name, email,birth,phone,address,address_detail) values(#{id}, 
		#{pwd}, #{name}, #{email},#{birth},#{phone},#{address},#{address_detail}) 
		]]> </insert> -->
	<select id="check_resume" parameterType="String"
		resultType="String">
		select userresume
		from kt_user
		where userId = #{userId}
	</select>

	<!-- 아이디 중복 검사 -->
	<select id="check_id" parameterType="String" resultType="int">
		select
		count(*) from kt_user where userId = #{userId}
	</select>

	<!-- 이메일 중복 검사 -->
	<select id="check_email" parameterType="String" resultType="int">
		select count(*) from kt_user where userEmail = #{userEmail}
	</select>

	<!-- 내정보 가져오기 -->
	<select id="get_myInformation" parameterType="String"
		resultType="memberVO">
		select * from kt_user where userId = #{userID}
	</select>

	<!-- 회원 가입 -->
	<insert id="join_member" parameterType="memberVO">
		insert into kt_user
		values(#{userId},#{userPassword},#{userName},#{userMajor},#{userGender},#{userPosition},#{userCompany},
		#{userEmail},#{userPhoneNumber},#{userAddress1},#{userAddress2},'N',#{birth},#{userJob},to_char(sysdate),'false')
	</insert>

	<!-- 이메일 인증 -->
	<update id="approval_member" parameterType="memberVO">

		update kt_user set
		approval_status = 'true'
		where userEmail =
		#{userEmail} <!-- and approval_key = #{approval_key} -->
	</update>


	<update id="updateMember" parameterType="memberVO">
     <![CDATA[
	     update kt_user
	     set userPassword=#{userPassword}, userName=#{userName}, userEmail=#{userEmail}
	     where
	     userId=#{userId}
      ]]>
	</update>

	<delete id="deleteMember" parameterType="String">
	<![CDATA[
	   delete from  kt_user
	   where
	   userId=#{userId}
	]]>
	</delete>

	<select id="loginById" resultType="memberVO"
		parameterType="String">
	<![CDATA[
		select * from kt_user
		where userId=#{userId} and approval_status='true' and userPassword=#{userPassword}
	]]>
	</select>

	<select id="partnerLoginById" resultType="partnerVO"
		parameterType="String">
	<![CDATA[
		select * from partner
		where partnerLicenseNum=#{userCompany}
	]]>
	</select>




	<update id="mod_myInformation" parameterType="memberVO">
     <![CDATA[
	     update kt_user
	     set userPassword=#{userPassword}, userName=#{userName}, userEmail=#{userEmail},
	     birth=#{birth}, userPhoneNumber=#{userPhoneNumber}, userPosition=#{userPosition},
	     userAddress1=#{userAddress1}, userAddress2=#{userAddress2}, userMajor=#{userMajor}
	     where
	     userId=#{userId}
      ]]>
	</update>
</mapper> 
